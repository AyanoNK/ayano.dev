---
import Icon from "astro-icon";
import SectionTitle from "../components/SectionTitle.astro";

import SectionLayout from "../layouts/SectionLayout.astro";

const cards = [
  {
    title: "Frontend Development",
    description:
      "Experienced in React, React Native & HAML, using Redux & React Query, etc., to build responsive, performant, and accessible applications.",
    image: "cib:react",
  },
  {
    title: "Backend Development",
    description:
      "Experienced in backend development with both Django & Ruby on Rails, exposing endpoints in both REST and GraphQL.",
    image: "eos-icons:system-image",
  },
  {
    title: "Database Management",
    description:
      "Worked with relational databases like PostgreSQL and MySQL, and new â”€ cutting edge NoSQL like Firebase.",
    image: "eos-icons:database",
  },
  {
    title: "DevOps",
    description:
      "Deployed both professional and personal projects using AWS S3, Google Cloud, Heroku, and Vercel.",
    image: "cib:google-cloud",
  },
];
---

<SectionLayout>
  <div class="flex flex-col items-center justify-center" id="about">
    <SectionTitle title="Expertise" />
    <div class="mx:auto container max-w-xs sm:max-w-sm md:max-w-3xl">
      <div
        id="cards"
        class="grid gap-4 text-center text-sm leading-6 md:grid-cols-2"
      >
        {
          cards.map((card) => (
            <div class="card relative rounded-lg bg-whiter p-5 text-darkpurple">
              <div class="flex flex-row items-center justify-start gap-4 pb-4">
                <Icon name={card.image} class="h-10" />
                <h4 class="text-2xl font-bold">{card.title}</h4>
              </div>
              <div class="flex flex-row items-center justify-center">
                <p class="text-start text-lg font-semibold">
                  {card.description}
                </p>
              </div>
            </div>
          ))
        }
      </div>
    </div>
  </div>
</SectionLayout>
<script>
  document.getElementById("cards").onmousemove = (e) => {
    Array.from(
      document.getElementsByClassName("card") as HTMLCollectionOf<HTMLElement>
    ).forEach((el) => {
      const rect = el.getBoundingClientRect(),
        x = e.clientX - rect.left,
        y = e.clientY - rect.top;
      el.style.setProperty("--mouse-x", `${x}px`);
      el.style.setProperty("--mouse-y", `${y}px`);
    });
  };
</script>
<style>
  .card:hover::before {
    opacity: 1;
  }

  .card::before,
  .card::after {
    border-radius: inherit;
    content: "";
    height: 100%;
    left: 0px;
    opacity: 0;
    position: absolute;
    top: 0px;
    transition: opacity 500ms;
    width: 100%;
  }

  .card::before {
    background: radial-gradient(
      800px circle at var(--mouse-x) var(--mouse-y),
      rgba(255, 255, 255, 0.3),
      transparent 40%
    );
    z-index: 3;
  }
</style>
